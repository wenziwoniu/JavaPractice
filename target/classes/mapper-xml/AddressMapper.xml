<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="javaee.spring.test.dao.mybatis.IAddressMybatisDao" >
  <resultMap id="BaseResultMap" type="javaee.spring.test.entity.Address" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="ADDRESS_NAME" property="addressName" jdbcType="VARCHAR" />
    <result column="OPTLOCK" property="optlock" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, ADDRESS_NAME, OPTLOCK
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from address
    where ID = #{id,jdbcType=BIGINT} for update
  </select>
  
    <select id="selectByPrimaryKeyOptmistic" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from address
    where ID = #{id,jdbcType=BIGINT}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from address
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="javaee.spring.test.entity.Address" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into address (ID, ADDRESS_NAME, OPTLOCK
      )
    values (#{id,jdbcType=BIGINT}, #{addressName,jdbcType=VARCHAR}, #{optlock,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="javaee.spring.test.entity.Address" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="addressName != null" >
        ADDRESS_NAME,
      </if>
      <if test="optlock != null" >
        OPTLOCK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="addressName != null" >
        #{addressName,jdbcType=VARCHAR},
      </if>
      <if test="optlock != null" >
        #{optlock,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="javaee.spring.test.entity.Address" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update address
    <set >
      <if test="addressName != null" >
        ADDRESS_NAME = #{addressName,jdbcType=VARCHAR},
      </if>
      <if test="optlock != null" >
        OPTLOCK = #{optlock,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateByPrimaryOptimistic" parameterType="javaee.spring.test.entity.Address" >
    update address
    <set >
      <if test="addressName != null" >
        ADDRESS_NAME = #{addressName,jdbcType=VARCHAR},
      </if>
        OPTLOCK = OPTLOCK + 1
    </set>
    where ID = #{id,jdbcType=BIGINT}
    <if test="optlock != null" >
       AND OPTLOCK = #{optlock}
      </if>
  </update>
  
  <update id="updateByPrimaryKey" parameterType="javaee.spring.test.entity.Address" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update address
    set ADDRESS_NAME = #{addressName,jdbcType=VARCHAR},
      OPTLOCK = #{optlock,jdbcType=INTEGER}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>